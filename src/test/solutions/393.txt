Program([
	FuncDecl(convertBinarytoOctal, IntegerType, [Param(binaryNumber, IntegerType)], None, BlockStmt([VarDecl(octalNumber, IntegerType), VarDecl(decimalNumber, IntegerType), VarDecl(i, IntegerType), AssignStmt(Id(octalNumber), BinExpr(+, BinExpr(-, Id(decimalNumber), Id(i)), IntegerLit(0))), DoWhileStmt(BinExpr(!=, Id(binaryNumber), IntegerLit(0)), BlockStmt([AssignStmt(Id(decimalNumber), BinExpr(+, Id(decimalNumber), BinExpr(%, Id(binaryNumber), IntegerLit(10)))), AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1))), AssignStmt(Id(binaryNumber), BinExpr(/, Id(binaryNumber), IntegerLit(10)))])), AssignStmt(Id(i), IntegerLit(1)), DoWhileStmt(BinExpr(!=, Id(decimalNumber), IntegerLit(0)), BlockStmt([AssignStmt(Id(octalNumber), BinExpr(+, Id(octalNumber), BinExpr(*, BinExpr(%, Id(decimalNumber), IntegerLit(8)), Id(i)))), AssignStmt(Id(decimalNumber), BinExpr(/, Id(decimalNumber), IntegerLit(8))), AssignStmt(Id(i), BinExpr(*, Id(i), IntegerLit(10)))])), ReturnStmt(Id(octalNumber))]))
])